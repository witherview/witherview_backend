# 실행 방법
# 파일이 있는 디렉토리에서 docker-compose up -d 로 실행합니다. 개발용 서버들을 한 번에 실행해 줍니다.
# 종료는 docker-compose down -v.

version: "3" # 파일 규격 버전
services: # 이 항목 밑에 실행하려는 컨테이너 들을 정의
  db: # 서비스 명
    image: mysql:5.7 # 사용할 이미지
    container_name: mysql # 컨테이너 이름 설정
    ports:
      - "3306:3306" # 접근 포트 설정 (컨테이너 외부:컨테이너 내부)
    environment: # -e 옵션
      - TZ=Asia/Seoul
      - MYSQL_ROOT_PASSWORD=1234  # MYSQL 패스워드 설정 옵션
    command: # 명령어 실행
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    volumes:
      - "./initCmd:/docker-entrypoint-initdb.d"

  redis:
    image: redis
    container_name: redis
    command: redis-server --port 6379
    restart: always
    ports:
      - 6379:6379

  mongo:
    image: mongo
    container_name: mongo
    restart: always
    ports:
      - 27017:27017
    environment:
      - TZ=Asia/Seoul
    #   MONGO_INITDB_ROOT_USERNAME: root
    #   MONGO_INITDB_ROOT_PASSWORD: 1234
#  keycloak:
#    image: jboss/keycloak:12.0.4
#    container_name: keycloak
#    environment:
#      - DB_VENDOR=h2
#      - KEYCLOAK_USER=admin
#      - KEYCLOAK_PASSWORD=admin
#      - KEYCLOAK_IMPORT=/opt/jboss/keycloak/realm-export.json
##    expose: 8180
#    ports:
#      - 8180:8180
##    depends_on:
##      - mysql
#    volumes:
#      - ./initCmd/realm-export.json:/opt/jboss/keycloak/realm-export.json
#      - ./initCmd/oauth-0.0.1-SNAPSHOT-all.jar:/opt/jboss/keycloak/standalone/deployments/oauth-0.0.1-SNAPSHOT-all.jar:z
#    command:
#     - "-Djboss.socket.binding.port-offset=100"
  
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
      - 61613:61613
    volumes:
      - ./initCmd/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    command: bash -c "
      rabbitmq-plugins --offline enable rabbitmq_stomp;
      rabbitmq-server
      "